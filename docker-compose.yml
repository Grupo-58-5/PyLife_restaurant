services:
  
  pythondb:
    image: postgres:15
    # restart: always
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
    container_name: python_database
    networks:
      - restaurant-network
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pgadmin4:
    image: dpage/pgadmin4:6.17
    # restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
      PGADMIN_DEFAULT_PASSWORD: 'admin'
    ports:
      - "8081:80"
    depends_on:
      - pythondb
    networks:
      - restaurant-network

  # TODO: Uncomment the following section to enable the web service
  web:
    build: .
    command: uvicorn src.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - 8080:8000
    environment:
      - PORT=${PORT:-8000}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - DB_NAME=${DB_NAME:-Pylife}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-LOLexito2014}
      - DB_HOST=pythondb
      - DB_PORT=${DB_PORT:-5432}
      - TESTING=${TESTING:-False}
    env_file:
      - ".env"
    depends_on:
      pythondb:
        condition: service_healthy
    networks:
      - restaurant-network
    
  web_test:
    build: .
    command: uvicorn src.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - 8082:8000
    environment:
      - PORT=${PORT:-8000}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - DB_NAME=${DB_NAME:-Pylife}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=pythondb
      - DB_PORT=${DB_PORT:-5432}
      - TESTING=True
    env_file:
      - ".env"
    depends_on:
      pythondb:
        condition: service_healthy
    networks:
      - restaurant-network

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres_data: